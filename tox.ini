[tox]
requires =
    pip>=24
    setuptools>=65.3
    tox>=4.28.3
    tox-extra>=2.1
    tox-uv>=1.25
env_list =
    py
    lint
    docs
    pkg
    lower
    integration
skip_missing_interpreters = true

[testenv]
description = Run the tests with pytest
package = editable
extras =
    test
pass_env =
    CI
    CURL_CA_BUNDLE
    FORCE_COLOR
    GH_*
    GITHUB_*
    HOME
    LANG
    LC_*
    NO_COLOR
    PYTEST_*
    PYTEST_REQPASS
    PYTHON*
    PYTHONBREAKPOINT
    PYTHONHTTPSVERIFY
    PYTHONIOENCODING
    PYTHONPYCACHEPREFIX
    PY_COLORS
    REQUESTS_CA_BUNDLE
    RTD_TOKEN
    SETUPTOOLS_SCM_DEBUG
    SSH_AUTH_SOCK
    SSL_CERT_FILE
    UV_*
set_env =
    COVERAGE_FILE = {env:COVERAGE_FILE:{env_dir}/.coverage.{env_name}}
    COVERAGE_PROCESS_START = {tox_root}/pyproject.toml
    FORCE_COLOR = 1
    MK_CONFIG_FILE = /dev/null
    PIP_CONSTRAINT = {tox_root}/.config/constraints.txt
    PIP_DISABLE_PIP_VERSION_CHECK = 1
    PRE_COMMIT_COLOR = always
    PYTHONHASHSEED = 0
    UV_CONSTRAINT = {tox_root}/.config/constraints.txt
    deps, devel, hook, lint, pkg, pre, py310, schemas: PIP_CONSTRAINT = /dev/null
    deps, devel, hook, lint, pkg, pre, py310, schemas: UV_CONSTRAINT = /dev/null
    devel: ANSIBLE_DEVEL_WARNING = false
    lower: PIP_CONSTRAINT = {tox_root}/.github/lower-constraints.txt
    lower: UV_CONSTRAINT = {tox_root}/.github/lower-constraints.txt
    pre: PIP_PRE = 1
commands_pre =
    sh -c "rm -f {envdir}/.coverage* 2>/dev/null || true"
commands =
    coverage run -m pytest {posargs:-ra --showlocals --doctest-modules --durations=10 -m "not eco"}
    {py,py310,py311,py312,py313}: sh -c "coverage combine -a -q --data-file={env_dir}/.coverage {work_dir}/*/.coverage.* && coverage xml --data-file={env_dir}/.coverage -o {env_dir}/coverage.xml --fail-under=0 && coverage report --data-file={env_dir}/.coverage"
allowlist_externals =
    bash
    find
    rm
    sh

[testenv:lint]
description = Run all linters
skip_install = true
deps =
    pre-commit>=4.1
    pre-commit-uv>=4.1.4
    pytest>=7.2.2  # to updated schemas
    setuptools>=51.1.1
pass_env =
    {[testenv]pass_env}
    PRE_COMMIT_HOME
commands_pre =
commands =
    {env_python} -m pre_commit run --all-files --show-diff-on-failure {posargs:}

[testenv:docs]
description = Builds docs
package = editable
skip_install = false
extras =
    docs
set_env =
    DYLD_FALLBACK_LIBRARY_PATH = /opt/homebrew/lib:{env:LD_LIBRARY_PATH}
    NO_COLOR = 1
    TERM = dump
commands =
    sh -c "cd docs && mk changelog"
    mkdocs {posargs:build --strict --site-dir=_readthedocs/html/}
white_list_externals =
    sh

[testenv:pkg]
description =
    Build package, verify metadata, install package and assert behavior when ansible is missing.
skip_install = true
deps =
    build>=0.9
    pip
    pipx
    twine>=4.0.1
commands_pre =
commands =
    bash -c "PIPX_BIN_DIR={work_dir}/.pipx/bin PIPX_HOME={work_dir}/.pipx pipx install --force -e ."
    bash -c "if stderr=$({work_dir}/.pipx/bin/mk --version >/dev/null) && test -z \"$stderr\"; then echo "ok"; fi"
    {env_python} -c 'import os.path, shutil, sys; \
      dist_dir = os.path.join("{tox_root}", "dist"); \
      os.path.isdir(dist_dir) or sys.exit(0); \
      print("Removing \{!s\} contents...".format(dist_dir), file=sys.stderr); \
      shutil.rmtree(dist_dir)'
    {env_python} -m build --outdir {tox_root}/dist/ {tox_root}
    python3 -m twine check --strict {tox_root}/dist/*
    sh -c 'python3 -m pip install "mk @ file://$(echo {tox_root}/dist/*.whl)"'
    python3 -m pip uninstall -y mk

[testenv:lower]
description = Install using lower-constraints.txt file for testing oldest versions.

[testenv:integration]
description = Run integrations tests
package = editable
deps =
    ansible-core>=2.15
    nox>=2024.3
extras =
    test
set_env =
    ANSIBLE_FORCE_COLOR = 1
    ANSIBLE_NOCOWS = 1
    MK_CONFIG_FILE = /dev/null
commands =
    ansible --version
    nox --version
    mk test-integration

[testenv:deps]
description = Bump all test dependencies
skip_install = true
deps =
    {[testenv:lint]deps}
commands_pre =
commands =
    pre-commit run --all-files --show-diff-on-failure --hook-stage manual deps
    pre-commit autoupdate
    tox -e lint
env_dir = {work_dir}/lint

[testenv:clean]
description = Remove temporary files
skip_install = true
deps =
commands_pre =
commands =
    find . -type d \( -name __pycache__ -o -name .mypy_cache \) -delete
    find . -type f \( -name '*.py[co]' -o -name ".coverage*" -o -name coverage.xml \) -delete
commands_post =
