name: tox

on:
  create:  # is used for publishing to PyPI and TestPyPI
    tags:  # any tag regardless of its name, no branches
      - "**"
  push:  # only publishes pushes to the main branch to TestPyPI
    branches:  # any integration branch but not tag
      - "main"
  pull_request:
  release:
    types:
      - published  # It seems that you can publish directly without creating
  schedule:
    - cron: 1 0 * * *  # Run daily at 0:01 UTC

jobs:
  build:
    name: ${{ matrix.tox_env }}
    runs-on: ubuntu-latest
    # limit potential endless looks like we had with build-containers
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        include:
          - tox_env: lint
          - tox_env: integration
          - tox_env: py38
          - tox_env: py39

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # needed by setuptools-scm
      - name: Install system dependencies
        run: |
          sudo apt-get update \
          && sudo apt-get install -y libvirt-dev
      - name: Find python version
        id: py_ver
        shell: python
        if: ${{ contains(matrix.tox_env, 'py') }}
        run: |
          v = '${{ matrix.tox_env }}'.split('-')[0].lstrip('py')
          print('::set-output name=version::{0}.{1}'.format(v[0],v[1:]))
      # Even our lint and other envs need access to tox
      - name: Install a default Python
        uses: actions/setup-python@v2
        # workaround to avoid getting 3.9 in:
        with:
          python-version: '3.8'
        if: ${{ ! contains(matrix.tox_env, 'py') }}
      # Be sure to install the version of python needed by a specific test, if necessary
      - name: Set up Python version
        uses: actions/setup-python@v2
        if: ${{ contains(matrix.tox_env, 'py') }}
        with:
          python-version: ${{ steps.py_ver.outputs.version }}
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install tox
      - name: Run tox -e ${{ matrix.tox_env }}
        run: |
          echo "${{ matrix.PREFIX }} tox -e ${{ matrix.tox_env }}"
          ${{ matrix.PREFIX }} tox -e ${{ matrix.tox_env }}

  publish:
    name: packaging
    needs:
      - build
    runs-on: ubuntu-20.04

    env:
      FORCE_COLOR: 1
      PY_COLORS: 1
      TOXENV: packaging
      TOX_PARALLEL_NO_SPINNER: 1

    steps:
      - name: Switch to using Python 3.8 by default
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install tox
        run: >-
          python3 -m
          pip install
          --user
          tox
      - name: Check out src from Git
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # needed by setuptools-scm
      - name: Build dists
        run: python -m tox -p auto --parallel-live -vvvv
      # https://github.com/pypa/pypi-support/issues/995
      # - name: Publish to test.pypi.org
      #   if: >-  # "create" workflows run separately from "push" & "pull_request"
      #     github.event_name == 'release'
      #   uses: pypa/gh-action-pypi-publish@master
      #   with:
      #     password: ${{ secrets.testpypi_password }}
      #     repository_url: https://test.pypi.org/legacy/
      - name: Publish to pypi.org
        if: >-  # "create" workflows run separately from "push" & "pull_request"
          github.event_name == 'release'
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.pypi_password }}
