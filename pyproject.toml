[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools >= 65.3.0", # required by pyproject+setuptools_scm integration and editable installs
  "setuptools_scm[toml] >= 7.0.5" # required for "no-local-version" scheme
]

[project]
authors = [{"email" = "sorin.sbarnea@gmail.com", "name" = "Sorin Sbarnea"}]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Intended Audience :: Information Technology",
  "Intended Audience :: System Administrators",
  "License :: OSI Approved :: MIT License",
  "Operating System :: MacOS",
  "Operating System :: POSIX",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python",
  "Topic :: Software Development :: Quality Assurance",
  "Topic :: Software Development :: Testing",
  "Topic :: Utilities"
]
description = "mk"
dynamic = ["version", "dependencies", "optional-dependencies"]
keywords = ["mk"]
name = "mk"
readme = "docs/README.md"
# https://peps.python.org/pep-0621/#readme
requires-python = ">=3.10"

[project.entry-points."mk_tools"]
ansible = "mk.tools.ansible:AnsibleTool"
cmake = "mk.tools.cmake:CMakeTool"
git = "mk.tools.git:GitTool"
make = "mk.tools.make:MakeTool"
node = "mk.tools.node:NodeTool"
nox = "mk.tools.nox:NoxTool"
pre = "mk.tools.pre:PreTool"
pre-commit = "mk.tools.pre_commit:PreCommitTool"
pypackage = "mk.tools.py_package:PyPackageTool"
pytest = "mk.tools.pytest:PyTestTool"
shell = "mk.tools.shell:ShellTool"
taskfile = "mk.tools.taskfile:TaskfileTool"
tox = "mk.tools.tox:ToxTool"

[project.scripts]
mk = "mk.__main__:cli"
pre = "mk.pre:app"

[project.urls]
changelog = "https://github.com/pycontribs/mk/releases"
documentation = "https://mk.readthedocs.io/"
homepage = "https://github.com/pycontribs/mk"
repository = "https://github.com/pycontribs/mk"

[tool.black]
# keep this value because typer does not accept new annotations such str | None
# from https://peps.python.org/pep-0604/
target-version = ["py39"]

# Keep this default because xml/report do not know to use load it from config file:
# data_file = ".coverage"
[tool.coverage.paths]
source = ["src", ".tox/*/site-packages"]

[tool.coverage.report]
exclude_also = ["pragma: no cover", "if TYPE_CHECKING:"]
# Increase it just so it would pass on any single-python run
fail_under = 44
# During development we might remove code (files) with coverage data, and we dont want to fail:
ignore_errors = true
omit = ["test/*"]
show_missing = true
skip_covered = true
skip_empty = true

[tool.coverage.run]
concurrency = ["multiprocessing", "thread"]
# Do not use branch until bug is fixes:
# https://github.com/nedbat/coveragepy/issues/605
# branch = true
parallel = true
source = ["src"]

[tool.isort]
profile = "black"

[tool.mypy]
color_output = true
error_summary = true
exclude = [".ansible", ".cache", ".tox", "build", "dist"]
python_version = "3.10"
strict = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = ["diskcache", "pytest_benchmark.fixture"]

[tool.ruff]
# Same as Black.
line-length = 88
# keep this as typer does not support new annotations format
target-version = "py39"

[tool.ruff.lint]
ignore = [
  # By design
  "COM812",
  # Disabled due to typer not supporting new annotations format
  "UP007",
  "LOG015",
  # temporary disabled until we fix them:
  "ANN",
  "B",
  "T",
  "D",
  "E",
  "PT",
  "ERA",
  "PTH",
  "C901",
  "ARG",
  "FBT",
  "SIM",
  "PGH",
  "TCH",
  "PLR",
  "INP",
  "RET"
]
select = ["ALL"]

[tool.ruff.lint.flake8-pytest-style]
parametrize-values-type = "tuple"

[tool.ruff.lint.isort]
known-first-party = ["mk"]

[tool.ruff.lint.per-file-ignores]
"test/**/*.py" = ["S"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.setuptools.dynamic]
dependencies = {file = [".config/requirements.txt"]}
optional-dependencies.docs = {file = [".config/requirements-docs.txt"]}
optional-dependencies.test = {file = [".config/requirements-test.txt"]}

[tool.setuptools_scm]
# To prevent accidental pick of mobile version tags such 'v6'
git_describe_command = [
  "git",
  "describe",
  "--dirty",
  "--long",
  "--tags",
  "--match",
  "v*.*"
]
local_scheme = "no-local-version"
tag_regex = "^(?P<prefix>v)?(?P<version>[0-9.]+)(?P<suffix>.*)?$"
write_to = "src/mk/_version.py"

[tool.tomlsort]
in_place = true
sort_inline_tables = true
sort_table_keys = true

[tool.uv]
# incompatible with Windows
environments = ["platform_system != 'Windows'"]

[tool.uv.pip]
annotation-style = "line"
custom-compile-command = "tox run -e deps"
no-emit-package = [
  "backports-tarfile",
  "cryptography",
  "exceptiongroup",
  "jeepney",
  "pip",
  "resolvelib",
  "secretstorage",
  "twine",
  "typing_extensions",
  "uv"
]
